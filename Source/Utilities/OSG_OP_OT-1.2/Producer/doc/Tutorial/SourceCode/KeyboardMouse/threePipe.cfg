#define SINGLE_SCREEN
#define ASSYMETRICAL_FRUSTUM

Camera "Camera 1"
{
    RenderSurface "Window 1"
    {
        Visual  {
            DOUBLEBUFFER,
            RGBA,
            DEPTH_SIZE 1,
            RED_SIZE 8,
            GREEN_SIZE 8,
            BLUE_SIZE 8,
            ALPHA_SIZE 8
        }
#ifdef SINGLE_SCREEN
	     Screen 0;
		 WindowRectangle 0 0 426 512;
#else
		 Screen 2;
#endif
         InputRectangle -2.5 -0.5 -1.0 1.0;
	     Border off;
    }
    Lens {
		Frustum -0.55228475 0.55228475 -0.41421356 0.41421356 1 1000.0;
    }
	Offset {
#ifdef ASSYMETRICAL_FRUSTUM
		Shear 1.5 0.0; 
#else
		Rotate -90.0 1 0 0;
		Rotate -45.0 0 0 1;
		Rotate  90.0 1 0 0;
#endif
	}
}

Camera "Camera 2"
{
    RenderSurface "Window 2"
    {
        Visual  {
            DOUBLEBUFFER,
            RGBA,
            DEPTH_SIZE 1,
            RED_SIZE 8,
            GREEN_SIZE 8,
            BLUE_SIZE 8,
            ALPHA_SIZE 8
        }
		Screen 0;
#ifdef SINGLE_SCREEN
		WindowRectangle 426 0 426 512;
#endif
        InputRectangle -1.0 1.0 -1.0 1.0;
		Border off;
    }
    Lens {
		Frustum -0.55228475 0.55228475 -0.41421356 0.41421356 1 1000.0;
    }
}

Camera "Camera 3"
{
    RenderSurface "Window 3"
    {
        Visual  {
            DOUBLEBUFFER,
            RGBA,
            DEPTH_SIZE 1,
            RED_SIZE 8,
            GREEN_SIZE 8,
            BLUE_SIZE 8,
            ALPHA_SIZE 8
        }
#ifdef SINGLE_SCREEN
		Screen 0;
		WindowRectangle 852 0 426 512;
#else
		Screen 1;
#endif
        InputRectangle 0.5 2.5 -1.0 1.0;
		Border off;
    }
    Lens {
		Frustum -0.55228475 0.55228475 -0.41421356 0.41421356 1 1000.0;
    }
	Offset {
#ifdef ASSYMETRICAL_FRUSTUM
		Shear -1.5 0.0; 
#else
		Rotate -90.0 1 0 0;
		Rotate 45.0 0 0 1;
		Rotate  90.0 1 0 0;
#endif
	}
}


InputArea
{
    RenderSurface "Window 1" ;
    RenderSurface "Window 2" ;
    RenderSurface "Window 3" ;
}


